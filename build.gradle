plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '6.25.0'
}


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('springAiVersion', "1.0.3")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

dependencies {
	// Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring AI
	implementation 'org.springframework.ai:spring-ai-starter-model-openai'
    implementation 'org.springframework.ai:spring-ai-starter-model-chat-memory-repository-jdbc'
	implementation 'org.springframework.ai:spring-ai-starter-vector-store-pgvector'
    implementation 'org.springframework.ai:spring-ai-markdown-document-reader'
    implementation 'org.springframework.ai:spring-ai-rag'

    // HTML parsing and conversion to Markdown
    implementation 'org.jsoup:jsoup:1.21.2'
    implementation 'com.vladsch.flexmark:flexmark-all:0.64.8'

	// OpenFeign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.2.1'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'

	// Lombok
	implementation 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    annotationProcessor 'org.projectlombok:lombok'

	// Unit Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Misc utilities
    implementation 'org.apache.commons:commons-lang3:3.19.0'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

spotless {
	java {
		toggleOffOn('formatter:off', 'formatter:on')

		removeUnusedImports()
		// apply a specific flavor of google-java-format
		googleJavaFormat().reflowLongStrings()

		// fix formatting of type annotations
		formatAnnotations()
	}
	format 'misc', {
		target '**/*.md', '**/.gitignore'
		trimTrailingWhitespace()
		endWithNewline()
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
